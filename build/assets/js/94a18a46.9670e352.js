"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[377],{640:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>d});var r=i(4848),t=i(8453);const s={sidebar_position:1},o="System Administration Guide",l={id:"pipeline-services/administration-guide",title:"System Administration Guide",description:"This article describes scenarios for administering a software component - Deploy tools (CDJE).",source:"@site/docs/pipeline-services/administration-guide.md",sourceDirName:"pipeline-services",slug:"/pipeline-services/administration-guide",permalink:"/docs/pipeline-services/administration-guide",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/pipeline-services/administration-guide.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Microservices deployment",permalink:"/docs/category/microservices-deployment"},next:{title:"Salesforce guides",permalink:"/docs/category/salesforce-guides"}},a={},d=[{value:"Terms and Definitions",id:"terms-and-definitions",level:3},{value:"Administration Scenarios",id:"administration-scenarios",level:2},{value:"Working with the environment.json",id:"working-with-the-environmentjson",level:3},{value:"Segmenting environment.json to facilitate parameter grouping",id:"segmenting-environmentjson-to-facilitate-parameter-grouping",level:3},{value:"Example of Usage",id:"example-of-usage",level:4},{value:"Automated delivery of configuration file changes from the distribution to the repository in the environment (migration)",id:"automated-delivery-of-configuration-file-changes-from-the-distribution-to-the-repository-in-the-environment-migration",level:4},{value:"Switching the Service job to configuration migration mode from the common distribution",id:"switching-the-service-job-to-configuration-migration-mode-from-the-common-distribution",level:5},{value:"Adding configuration template files to the common distribution",id:"adding-configuration-template-files-to-the-common-distribution",level:5},{value:"Creating or updating the __migration-rules.yml file in the common distribution",id:"creating-or-updating-the-__migration-rulesyml-file-in-the-common-distribution",level:5},{value:"Initiating the Service job",id:"initiating-the-service-job",level:5},{value:"Managing the subsystems.json",id:"managing-the-subsystemsjson",level:3},{value:"System Log Events",id:"system-log-events",level:2},{value:"Monitoring Events",id:"monitoring-events",level:2},{value:"Common Issues and Solution",id:"common-issues-and-solution",level:2}];function c(e){const n={admonition:"admonition",blockquote:"blockquote",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"system-administration-guide",children:"System Administration Guide"})}),"\n",(0,r.jsxs)(n.p,{children:["This article describes scenarios for administering a software component - ",(0,r.jsx)(n.strong,{children:"Deploy tools"})," (",(0,r.jsx)(n.code,{children:"CDJE"}),")."]}),"\n",(0,r.jsx)(n.h3,{id:"terms-and-definitions",children:"Terms and Definitions"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Term/abbreviation"}),(0,r.jsx)(n.th,{children:"Definition"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"DevOps"}),(0,r.jsx)(n.td,{children:"Development and Operations"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"DPM"}),(0,r.jsx)(n.td,{children:"DevOps Pipeline Management"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"JDBC"}),(0,r.jsx)(n.td,{children:"Java Data Base Connectivity"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Jenkins"}),(0,r.jsx)(n.td,{children:"A continuous integration/continuous delivery and deployment (CI/CD) automation software"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Nexus"}),(0,r.jsx)(n.td,{children:"Nexus Repository Manager"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Kubernetes/OpenShift"}),(0,r.jsx)(n.td,{children:"Container orchestration platform"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"UI"}),(0,r.jsx)(n.td,{children:"User Interface"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"AFT"}),(0,r.jsx)(n.td,{children:"Automated functional testing"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"DB"}),(0,r.jsx)(n.td,{children:"Database"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"PROD"}),(0,r.jsx)(n.td,{children:"Production environment"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"DBMS"}),(0,r.jsx)(n.td,{children:"Database Management System"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"PMS"}),(0,r.jsx)(n.td,{children:"Process Management System"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"User"}),(0,r.jsx)(n.td,{children:"User account"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"FS"}),(0,r.jsx)(n.td,{children:"Functional subsystem"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"SF"}),(0,r.jsx)(n.td,{children:"Software distribution / distribution"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"administration-scenarios",children:"Administration Scenarios"}),"\n",(0,r.jsxs)(n.p,{children:["There are two primary configuration files to interact with the created ",(0,r.jsx)(n.strong,{children:"Pipeline"})," in Jenkins:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"environment.json"})})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"subsystems.json"})})}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"These files are located in the common repository and are being used by the system administrator to carry out functional adjustments and manage environment-dependent parameters."}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["After updating the ",(0,r.jsx)(n.code,{children:"pipeline"})," distribution (refer to ",(0,r.jsx)(n.strong,{children:"Installation Guide"})," \u2192 ",(0,r.jsx)(n.strong,{children:"Update"})," \u2192 ",(0,r.jsx)(n.strong,{children:"Conducting a consecutive Pipeline migration"}),") using a ",(0,r.jsx)(n.strong,{children:"Service job"})," in the ",(0,r.jsx)(n.code,{children:"common"})," repository the primary configuration file for the ",(0,r.jsx)(n.code,{children:"pipeline"})," \u2013 ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"environment.json"})})," is being created/updated. This file allows the administration of stand-dependent parameters shared among all deployed functional applications, including Nexus Repository addresses, deployment credentials, deployment modes, and optionally selected features. All possible parameters in the ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"environment.json"})})," file are shown in the following code block."]}),"\n",(0,r.jsx)(n.h3,{id:"working-with-the-environmentjson",children:"Working with the environment.json"}),"\n",(0,r.jsxs)(n.p,{children:["All possible parameters in the ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"environment.json"})})," file are presented in the following code block:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\r\n  "!__default":\r\n  {                                \t\t\t\t                \r\n      "doNotCheckInventoryOnNull": "false",\r\n      "openshiftDeploySafeMode": "false",\t\t\t    \t\t\r\n      "openShiftPrecheck": "warning",\t\t\t    \t\t\t\r\n      "openShiftCheckConfNames": "off",                         \r\n      "bluegreen":"false",          \r\n      "approveGreen": "false",   \r\n      "openshiftDeploySafeMode": "false",\r\n      "openShiftPrecheck": "warning",\t\r\n      "openShiftCheckConfNames": "off", \r\n      "openShiftNewPasswords": "false",   \r\n      "openshiftMultiClusters": "false",   \r\n      "openshiftNginx": "false",         \r\n      "openshiftSecretsFilters": "false",  \r\n      "credentials": {\r\n          "openshiftOpsPasswordsCred": "vault_cred_openshift_ops",                                                         \r\n          "SshKeyCreds"         : "_template_",     \r\n\r\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"segmenting-environmentjson-to-facilitate-parameter-grouping",children:"Segmenting environment.json to facilitate parameter grouping"}),"\n",(0,r.jsxs)(n.p,{children:["Given the multitude of parameters listed in the ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"environment.json"})}),", a new functionality has been introduced in ",(0,r.jsx)(n.code,{children:"release/D-01.038.917"})," allowing the split of the configuration file into several components. This feature is implemented by enabling the use of a special pseudo-directive: ",(0,r.jsx)(n.code,{children:"@@include=path/filename.json"})," in ",(0,r.jsx)(n.code,{children:"parameters"})," section within the file:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Files intended for inclusion in environment.json must be located within the common repository under the specified block."}),"\n",(0,r.jsx)(n.li,{children:"Arbitrary directory and file names are permissible."}),"\n",(0,r.jsx)(n.li,{children:"There are no restrictions on the number of pseudo-directives used or their nesting levels."}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"example-of-usage",children:"Example of Usage"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"common"})," Repository Structure:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"common/b1\r\n\u251c\u2500includes               \r\n\u2502  \u2514\u2500\u2500\u2500playbooks.json\r\n\u2502  \u2514\u2500\u2500\u2500ift.json\r\n\u251c\u2500environment.json\n"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Main configuration file: ",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.em,{children:"environment.json"})})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\r\n    "_default": {\r\n        \r\n        "exampleParam": "test",\r\n        "playbooks_fpi": "@@include=includes/playbooks.json",\r\n        "exampleParam2": "test2",\r\n\r\n    },\r\n    "ift": "@@include=includes/ift.json"\r\n}\r\n\r\n\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Data Source file ",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.em,{children:"includes/playbooks.json"})})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'[\r\n  {\r\n      "name": "PLAYBOOK_1",\r\n      "id": 1\r\n  },\r\n  {\r\n      "name": "PLAYBOOK_2",\r\n      "id": 2\r\n  }\r\n]\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Data Source file ",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.em,{children:"includes/ift.json"})})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\r\n  \r\n  "exampleParam": "anotherValue",\r\n  "exampleParam2": "anotherValue",\r\n  \r\n}\n'})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["A newly transformed file (",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.em,{children:"environment.json"})}),"):"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\r\n    "_default": {\r\n        \r\n        "exampleParam": "test",\r\n        "playbooks_fpi": [\r\n          {\r\n            "name": "PLAYBOOK_1",\r\n            "id": 1\r\n          },\r\n          {\r\n            "name": "PLAYBOOK_2",\r\n            "id": 2\r\n          }\r\n        ],\r\n        "exampleParam2": "test2",\r\n        \r\n    },\r\n    "ift": {\r\n      \r\n      "exampleParam": "anotherValue",\r\n      "exampleParam2": "anotherValue",\r\n      \r\n    }\r\n}\n'})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["The mentioned operations take place during the specified ",(0,r.jsx)(n.code,{children:'"runtime":'})," with each execution. Therefore, configurations will be read from the final processed file (",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"environment.json"})}),")."]}),"\n",(0,r.jsx)(n.h4,{id:"automated-delivery-of-configuration-file-changes-from-the-distribution-to-the-repository-in-the-environment-migration",children:"Automated delivery of configuration file changes from the distribution to the repository in the environment (migration)"}),"\n",(0,r.jsx)(n.p,{children:"To enable automated delivery of configuration file changes, the following conditions must be met:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Service job should be switched to configuration migration mode from the ",(0,r.jsx)(n.code,{children:"common"})," distribution."]}),"\n",(0,r.jsxs)(n.li,{children:["In the ",(0,r.jsx)(n.code,{children:"common"})," distribution, the ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"environment.json"})})," should be located along with other configuration files."]}),"\n",(0,r.jsxs)(n.li,{children:["A new migration rule should be added to the ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"playbooks.json_"})})," file in the ",(0,r.jsx)(n.code,{children:"common"})," distribution."]}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"The conditions listed are described below:"}),"\n"]}),"\n",(0,r.jsx)(n.h5,{id:"switching-the-service-job-to-configuration-migration-mode-from-the-common-distribution",children:"Switching the Service job to configuration migration mode from the common distribution"}),"\n",(0,r.jsxs)(n.p,{children:["To switch ",(0,r.jsx)(n.strong,{children:"Service job"})," into configuration migration mode it is necessary to specify a ",(0,r.jsx)(n.code,{children:"flag"})," in the  ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"environment<CHANNEL>.json"})})," file for the Service job at the installation-wide level in the ",(0,r.jsx)(n.strong,{children:"released"})," ",(0,r.jsx)(n.code,{children:"pipeline"})," repository:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\r\n  \r\n  "migrateConfigurationWithPipeline": false,\r\n  \r\n}\n'})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["This flag disables the migration of any ",(0,r.jsx)(n.em,{children:"environment.json"})," files from the released ",(0,r.jsx)(n.code,{children:"pipeline"})," repository by executing the ",(0,r.jsx)(n.strong,{children:"MIGRATION"})," script (",(0,r.jsx)(n.code,{children:"ARTIFACT_TYPE: PIPELINE"}),")."]}),"\n",(0,r.jsxs)(n.li,{children:["Enabling the flag allows the migration to be executed through a new ",(0,r.jsx)(n.strong,{children:"MIGRATION_CONFIGURATION"})," script (",(0,r.jsx)(n.code,{children:"ARTIFACT_TYPE: COMMON"}),")."]}),"\n"]}),"\n",(0,r.jsx)(n.h5,{id:"adding-configuration-template-files-to-the-common-distribution",children:"Adding configuration template files to the common distribution"}),"\n",(0,r.jsxs)(n.p,{children:["In the source code repository of the ",(0,r.jsx)(n.code,{children:"common"})," distribution, a new ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"environment.json"})})," must be created (with directives specified as ",(0,r.jsx)(n.code,{children:"@@includes=..."}),"), along with the files that are intended to enrich the ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"environment.json"})})," (the structure is shown in the ",(0,r.jsx)(n.strong,{children:"Usage Examples"})," section)."]}),"\n",(0,r.jsx)(n.admonition,{title:"Important",type:"warning",children:(0,r.jsxs)(n.p,{children:["The files should be located in the directory: ",(0,r.jsx)(n.code,{children:"src/main/resources/common"})]})}),"\n",(0,r.jsx)(n.h5,{id:"creating-or-updating-the-__migration-rulesyml-file-in-the-common-distribution",children:"Creating or updating the __migration-rules.yml file in the common distribution"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"__migration-rules.yml"})})," file is utilized to configure the migration of data from the ",(0,r.jsx)(n.code,{children:"common"})," distribution to the ",(0,r.jsx)(n.code,{children:"common"})," repository for the environment, specifying which files to migrate and the migration process itself."]}),"\n",(0,r.jsx)(n.admonition,{title:"Important",type:"danger",children:(0,r.jsxs)(n.p,{children:["The files should be located in the directory: ",(0,r.jsx)(n.code,{children:"src/main/resources/common"})]})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"__migration-rules.yml"})})," must contain the following:"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Specify the basic migration behavior by copying the contents mentioned below::"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'# The rules are applied sequentially, from first to last\r\nmigrationRules:\r\n  # File paths are specified in  ant-style:\r\n  # - https://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/util/AntPathMatcher.html\r\n  # - https://www.jenkins.io/doc/pipeline/steps/file-operations/\r\n  - type: ignore\r\n    items:\r\n      - "**/__*__/**"\r\n      - "**/__topology-mapping.yml"\r\n      - "**/__migration-rules.yml"\r\n      - "pipeline.yml"\r\n      - "installer/system/efs/config/definitions/**"\r\n      - "installer/system/efs/config/global_parameters/**"\r\n      - "**/README.md"\r\n  - type: rewrite\r\n    items:\r\n      - "**/ansible/sup2_common.json"\r\n  - type: createIfNotExists\r\n    items:\r\n      - "**/ansible/secret.yml"\r\n      - "**/ansible/_passwords.conf"\r\n      - "**/ansible/nginx.conf"\r\n      - "**/ansible/files/**"\r\n      - "**/ansible/UTIL_SECURE/inventory"\r\n      - "**/ansible/globalInventory"\r\n      - "**/blackList.conf"\r\n      - "**/jenkinsJobs.conf"\r\n  - type: migrateConfTool\r\n    items:\r\n      - "installer/installer/system/efs/config/parameters/__migration.conf"\r\n  - type: merge\r\n    migratorOpts: "--never-delete \'.*\'"\r\n    items:\r\n      - "**/ansible/*.json"\r\n      - "**/ansible/mq/*.json"\r\n      - "**/ansible/kafka/*.json"\r\n      - "**/ansible/kafka/*.yml"\r\n      - "**/version.conf"\r\n      - "**/multiClusters.json"\r\n  - type: merge\r\n    items:\r\n      - "**/installer/system/efs/config/parameters/*.conf"\r\n  - type: merge\r\n    items:\r\n      - "**/ansible/*conf.yml"\r\n  - type: remove\r\n    items: []\n'})}),"\n",(0,r.jsxs)(n.admonition,{title:"Important",type:"warning",children:[(0,r.jsxs)(n.p,{children:["When working with a freshly downloaded ",(0,r.jsx)(n.code,{children:"common"})," distribution, instead of the above-mentioned, copy the following content:"]}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'# The rules are applied sequentially, from first to last\r\nmigrationRules:\r\n# File paths are specified in  ant-style:\r\n# - https://docs.spring.io/spring/docs/current/javadoc-api/org/springframework/util/AntPathMatcher.html\r\n# - https://www.jenkins.io/doc/pipeline/steps/file-operations/\r\n- type: createIfNotExists\r\n    items:\r\n    - "**/hosts/globalInventory"\r\n    - "**/parameters/_extra.conf"\r\n    - "**/parameters/common.conf.yml"\r\n    - "**/secrets/_passwords.conf"\r\n    - "**/subsystems.json"\r\n\r\n- type: merge\r\n    migratorOpts: "--never-delete \'.*\'"\r\n    items:\r\n    - "**/version.conf"\r\n    - "**/multiClusters.json"\n'})})]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Add a new group for the migration of configurations:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'environment:\r\n  # Migration of environment.json file\r\n  - command: merge\r\n    parameters:\r\n      sourceDir: "{{ sourcePath }}/environments"\r\n      targetDir: "{{ targetPath }}"\r\n      resultDir: "{{ targetPath }}"\r\n      includes:\r\n        - "environment.json"\r\n      mergeConfiguration:\r\n          includes:\r\n            - "__default(\\\\.+)?"\r\n            - "{{ ENVIR }}(\\\\.+)?"\r\n          rewrite:\r\n            - "__default(\\\\.+)?"\r\n          keep:\r\n            - "{{ ENVIR }}(\\\\.+)?"\r\n\r\n  # Migration of environment.json file components\r\n  - command: merge\r\n    parameters:\r\n      sourceDir: "{{ sourcePath }}/environments/includes"\r\n      targetDir: "{{ targetPath }}/includes"\r\n      resultDir: "{{ targetPath }}/includes"\r\n      includes:\r\n        - "*.json"\r\n      mergeConfiguration:\r\n        rewrite:\r\n          - ".*"\n'})}),"\n",(0,r.jsx)(n.admonition,{type:"caution",children:(0,r.jsx)(n.p,{children:"f the files are located in directories other than originally specified, it is necessary to adjust the template for the designated directories."})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["It's worth noting that within the description of the ",(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"__migration-rules.yml"})})," file, the use of templates is also allowed. At this stage, there are three placeholders available:"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"sourcePath"})," - the source directory (where the ",(0,r.jsx)(n.code,{children:"common"})," software distribution was originally placed)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"targetPath"})," - the target directory (where the ",(0,r.jsx)(n.code,{children:"common"})," repository with the selected blocks was downloaded from the active environment)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ENVIR"})," - the name of the environment/'stand'."]}),"\n"]}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["A new new version of the ",(0,r.jsx)(n.code,{children:"common"})," software distribution should be build after making all the modifications to the source code."]})}),"\n",(0,r.jsx)(n.h5,{id:"initiating-the-service-job",children:"Initiating the Service job"}),"\n",(0,r.jsx)(n.admonition,{title:"Important",type:"warning",children:(0,r.jsx)(n.p,{children:"Before Initiating it is recommended to perform a clean reconfiguration of the Service job by launching a Jenkins job with empty parameters."})}),"\n",(0,r.jsxs)(n.p,{children:["To initiate the migration of configurations using the ",(0,r.jsx)(n.strong,{children:"Service job"}),", launch it with the following parameters:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'# A component to be updated\r\nARTIFACT_TYPE: "COMMON"\r\n# Targeted version\r\nARTIFACT_VERSION: <Version of the previously released `common` distribution>\r\n# Stage selection (stage \u2013 is a specified part of the component that will be updated)\r\nPARAMETERS:\r\n  - MIGRATION_CONFIGURATION\n'})}),"\n",(0,r.jsx)(n.h3,{id:"managing-the-subsystemsjson",children:"Managing the subsystems.json"}),"\n",(0,r.jsxs)(n.p,{children:["Following the Pipeline update (refer to ",(0,r.jsx)(n.strong,{children:"Installation Guide"})," \u2192 ",(0,r.jsx)(n.strong,{children:"Conducting Sequential Subsystems Migration"}),"), the primary configuration file for installed configurations of functional applications - subsystems.json, is being created or updated in the ",(0,r.jsx)(n.code,{children:"common"})," repository through the ",(0,r.jsx)(n.strong,{children:"Service job"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"subsystems.json"})})," file contents example:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'{"!__default"\r\n  :{                                // Default Settings Block. AVOID MAKING ANY CHANGES IN THIS BLOCK \u2014 IT IS REGULARLY UPDATED AND OVERWRITTEN\r\n\r\n  "classifier": "distrib",          // Classifier of the functional subsystem software distribution in the Nexus repository\r\n  "groupId": "Nexus_PROD",          // Group ID of the functional subsystem software distribution in the Nexus repository\r\n  "packaging": "zip",               // File extension with the functional subsystem software distribution\r\n  "strict": "false",                // Migration mode for functional subsystem settings (true - only files starting with <fpi_name> will be migrated, false - all files will be migrated)\r\n  "limit": 100,                     // Limitation on the number of distribution versions in the Jenkins menu\r\n  "emailList": ["<email>"],         // Email addresses for receiving notifications on the status of the AD Pipeline\r\n  "at": {                           // Block with default API test distribution credentials\r\n    "groupId": "Nexus_PROD",        // Group ID for the API test distribution\r\n    "branch": "master",             // Default repository branch for API test settings\r\n    "classifier": "distrib",        // Default classifier for the API test distribution\r\n    "packaging": "zip",             // Default extension for the API test distribution\r\n    "timeout": 100                  // Time limit, after which the automated tests will be stopped and an error message logged\r\n  },\r\n {\r\n  }  \r\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"system-log-events",children:"System Log Events"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.strong,{children:"Deploy Tools"})," software component lacks a built-in system log. Events from each run of the Deploy tools are logged using Jenkins service and stored in the job run logs."]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Audit events for the Deploy tools software component are not generated."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"monitoring-events",children:"Monitoring Events"}),"\n",(0,r.jsxs)(n.p,{children:["Monitoring events are not currently present for the ",(0,r.jsx)(n.strong,{children:"Deploy tools"})," software component."]}),"\n",(0,r.jsx)(n.h2,{id:"common-issues-and-solution",children:"Common Issues and Solution"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"Issue:"})})," Repositories for ",(0,r.jsx)(n.code,{children:"common"}),", ",(0,r.jsx)(n.code,{children:"pipeline"}),", or functional subsystem repositories has not been created, or there is no access to these mentioned (requires Read/Write access)."]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["[!IMPORTANT]",(0,r.jsx)(n.br,{}),"\n","This error may also occur when no initial ",(0,r.jsx)(n.strong,{children:"Commit"})," has been made to the created repositories."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"11:43:40  ERROR: Error cloning remote repo 'origin'\r\n11:43:40  hudson.plugins.git.GitException: Command \"git fetch --tags --progress ssh://<git@stash devops sandbox>/CI00380023_efs_ukofl_pipeline_mmv.git +refs/heads/*:refs/remotes/origin/*\" returned status code 128:\r\n11:43:40  stdout:\r\n11:43:40  stderr: Repository not found\r\n11:43:40  The requested repository does not exist, or you do not have permission to access it.\r\n11:43:40  fatal: Could not read from remote repository.\r\n11:43:40  \r\n11:43:40  Please make sure you have the correct access rights\r\n11:43:40  and the repository exists.\r\n11:43:40  \n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"11:45:04  The build was interrupted due to an error:\r\n11:45:04  <..>.devops.UFSResultException: hudson.AbortException: Error cloning remote repo 'origin'\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"Solution:"})})," Create the absent repository/repositories and ensure access to them for the designated user account."]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>l});var r=i(6540);const t={},s=r.createContext(t);function o(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);